/* == MODULE thirdparty.c == */

/* NOTE: This template will be filled in by CMake. Do not edit. */

/* -- Own headers -- */

#include "thirdparty.h"
#include "stringify.h"

/* -- Standard headers -- */

#include <stdio.h>

/* == Implementation == */

/* Boost is always available */
#include "boost/version.hpp"
#define BOOST_PATCHLEVEL (BOOST_VERSION % 100)
#define BOOST_VERSION_MINOR (BOOST_VERSION / 100 % 1000)
#define BOOST_VERSION_MAJOR (BOOST_VERSION / 100000)

const char* config_boost_version() {
    static char boostver[14];    /* format is "Boost X.YY.Z" */
    snprintf(boostver, 14, "Boost %d.%d.%d",
        BOOST_VERSION_MAJOR,
        BOOST_VERSION_MINOR,
        BOOST_PATCHLEVEL
    );
    return boostver;
}

/* BamTools is always available */
const char* config_bamtools() {
	return "BamTools 2.3.1 (AA)";
}

int config_have_bamtools() {
    return 1 ;
}

/* == END MODULE thirdparty.c == */

