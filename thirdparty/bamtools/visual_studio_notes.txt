Visual Studio build notes
=========================

The stdint.h constants are redefined in src/shared/bamtools_global.h.
This causes a typedef redefinition conflict when compiling Multovl. Fix from Line 65
by setting ifdef _MSC_VER to if 0:

>>>>>
#  if 0 /* def _MSC_VER */
     typedef char                 int8_t;
     typedef unsigned char       uint8_t;
     typedef short               int16_t;
     typedef unsigned short     uint16_t;
     typedef int                 int32_t;
     typedef unsigned int       uint32_t;
     typedef long long           int64_t;
     typedef unsigned long long uint64_t;
#  else
#    include <stdint.h>
#  endif
<<<<<

Edit top-level CMakeLists.txt: Zlib must be found:

###
set(ZLIB_ROOT "/Users/aszodi/Source/zlib/install" CACHE PATH "Top-level Zlib installation directory")
find_package(ZLIB REQUIRED)
if (ZLIB_FOUND)
	message(STATUS "Zlib found")
else()
	message(FATAL_ERROR "Cannot build BamTools without Zlib. Set ZLIB_ROOT properly")
endif()
include_directories(${ZLIB_INCLUDE_DIRS})
###

In src/api/CMakeLists.txt, comment out the following:

### ---
# if( WIN32 )
    # set( APILibs z ws2_32 )
# else()
    # set( APILibs z )
# endif()
### ---

To configure the build, use the Visual Studio command prompt. Create a build directory, configure as:

cmake -G "Visual Studio 12" -DCMAKE_BUILD_TYPE=Release -DZLIB_ROOT=\path\to\zlib\install ..

This should create a Visual Studio solution called "BamTools". Open it, build the project "BamTools-static", before building change the GUI to "Release"!

(note: the build did not succeed, VS hung...)